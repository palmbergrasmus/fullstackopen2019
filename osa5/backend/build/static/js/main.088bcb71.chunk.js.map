{"version":3,"sources":["services/login.js","services/blogs.js","components/LoginForm.js","components/Blog.js","components/BlogForm.js","App.js","index.js"],"names":["services_login","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","credentials","response","wrap","_context","prev","next","axios","post","sent","abrupt","data","stop","_x","apply","this","arguments","token","services_blogs","getAll","get","then","setToken","newToken","concat","create","newObject","config","console","log","headers","Authorization","LoginForm","props","username","setUsername","password","setPassword","handleLogin","react_default","createElement","onSubmit","type","value","name","onChange","Blog","blog","title","author","BlogForm","addBlog","_useState","useState","_useState2","slicedToArray","setTitle","_useState3","_useState4","setAuthor","_useState5","_useState6","url","setUrl","event","target","App","blogs","setBlogs","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","user","setUser","useEffect","blogsService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","_user2","preventDefault","loginService","setItem","stringify","t0","setTimeout","handleSetUsername","handleSetPassword","className","style","color","display","flexDirection","alignItems","onClick","removeItem","components_BlogForm","map","index","components_Blog","key","components_LoginForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.088bcb71.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  console.log(newObject)\n  const config = {\n    headers: { Authorization: token },\n  }\n  console.log(token)\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, setToken, create }","import React from 'react'\n  \nconst LoginForm = props => {\n  const { username, setUsername, password, setPassword, handleLogin } = props;\n\n  return (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={setUsername}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={setPassword}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n}\n\nexport default LoginForm;","import React from 'react'\nconst Blog = ({ blog }) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>\n)\n\nexport default Blog","import React, { useState } from 'react';\n\nconst BlogForm = (props) => {\n  const { addBlog } = props;\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n\n  const handleSetTitle = event => setTitle(event.target.value)\n\n  const handleSetAuthor = event => setAuthor(event.target.value)\n\n  const handleSetUrl = event => setUrl(event.target.value)\n\n  const handleAddBlog = () => {\n    addBlog({ title, author, url })\n  }\n\n  return (\n    <form onSubmit={handleAddBlog}>\n      <div>\n        title:\n        <input\n          type=\"text\"\n          value={title}\n          name=\"title\"\n          onChange={handleSetTitle}\n        />\n      </div>\n      <div>\n        author:\n        <input\n          type=\"text\"\n          value={author}\n          name=\"author\"\n          onChange={handleSetAuthor}\n        />\n      </div>\n      <div>\n        url:\n        <input\n          type=\"text\"\n          value={url}\n          name=\"url\"\n          onChange={handleSetUrl}\n        />\n      </div>\n      <button type=\"submit\">create</button>\n    </form>\n  )\n}\n\nexport default BlogForm;","import React, { useState, useEffect } from 'react';\nimport loginService from './services/login'\nimport blogsService from './services/blogs'\nimport LoginForm from './components/LoginForm'\nimport Blog from './components/Blog';\nimport BlogForm from './components/BlogForm';\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [blogs, setBlogs] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogsService\n      .getAll()\n      .then(initialNotes => setBlogs(initialNotes))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogsService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null);\n    window.localStorage.removeItem('loggedNoteappUser');\n  }\n\n  const handleSetUsername = event => setUsername(event.target.value)\n\n  const handleSetPassword = event => setPassword(event.target.value)\n\n  const renderLoginForm = () => {\n    return (\n      <LoginForm\n        username={username}\n        password={password}\n        setUsername={handleSetUsername}\n        setPassword={handleSetPassword}\n        handleLogin={handleLogin}\n      />\n    )\n  }\n\n  const handleAddBlog = (blog) => {\n    blogsService.create(blog)\n  }\n\n  console.log(user)\n\n  const renderBlogs = () => blogs.map((blog, index) => <Blog key={index} blog={blog}/>)\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">Blogs</h1>\n      <div style={{ color: \"red\" }}>{errorMessage}</div>\n      {!user\n        ? renderLoginForm()\n        :\n        <div>\n          <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n            <p>{`${user.name} logged in`}</p>\n            <button onClick={handleLogout}>logout</button>\n          </div>\n          <h2>create new blog</h2>\n          <BlogForm addBlog={handleAddBlog}/>\n          {renderBlogs()}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
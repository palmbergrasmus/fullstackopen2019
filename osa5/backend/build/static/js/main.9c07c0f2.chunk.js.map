{"version":3,"sources":["services/login.js","services/blogs.js","components/LoginForm.js","components/Blog.js","App.js","index.js"],"names":["services_login","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","credentials","response","wrap","_context","prev","next","axios","post","sent","abrupt","data","stop","_x","apply","this","arguments","services_blogs","get","then","LoginForm","props","username","setUsername","password","setPassword","handleLogin","react_default","createElement","onSubmit","type","value","name","onChange","Blog","blog","title","author","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","blogs","setBlogs","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","user","setUser","useEffect","blogsService","initialNotes","event","_user","preventDefault","loginService","t0","setTimeout","handleSetUsername","target","handleSetPassword","className","style","color","concat","map","index","components_Blog","key","components_LoginForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9c07c0f2.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll }","import React from 'react'\n  \nconst LoginForm = props => {\n  const { username, setUsername, password, setPassword, handleLogin } = props;\n\n  return (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={setUsername}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={setPassword}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n}\n\nexport default LoginForm;","import React from 'react'\nconst Blog = ({ blog }) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>\n)\n\nexport default Blog","import React, { useState, useEffect } from 'react';\nimport loginService from './services/login'\nimport blogsService from './services/blogs'\nimport LoginForm from './components/LoginForm'\nimport Blog from './components/Blog';\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [blogs, setBlogs] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogsService\n      .getAll()\n      .then(initialNotes => setBlogs(initialNotes))\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({ username, password })\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSetUsername = event => setUsername(event.target.value)\n\n  const handleSetPassword = event => setPassword(event.target.value)\n\n  const renderLoginForm = () => {\n    return (\n      <LoginForm\n        username={username}\n        password={password}\n        setUsername={handleSetUsername}\n        setPassword={handleSetPassword}\n        handleLogin={handleLogin}\n      />\n    )\n  }\n\n  const renderBlogs = () => blogs.map((blog, index) => <Blog key={index} blog={blog}/>)\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">Blogs</h1>\n      <div style={{ color: \"red\" }}>{errorMessage}</div>\n      {!user\n        ? renderLoginForm()\n        :\n        <div>\n          <p>{`${user.name} logged in`}</p>\n          {renderBlogs()}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
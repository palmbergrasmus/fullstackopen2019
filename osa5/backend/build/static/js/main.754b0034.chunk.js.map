{"version":3,"sources":["services/login.js","services/blogs.js","components/LoginForm.js","components/Blog.js","components/Blogs.js","components/BlogForm.js","App.js","index.js"],"names":["services_login","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","credentials","response","wrap","_context","prev","next","axios","post","sent","abrupt","data","stop","_x","apply","this","arguments","token","services_blogs","getAll","get","then","setToken","newToken","concat","create","newObject","config","headers","Authorization","t0","LoginForm","props","username","setUsername","password","setPassword","handleLogin","handleVisible","visible","react_default","createElement","onSubmit","type","value","name","onChange","onClick","Blog","blog","title","author","Blogs","blogs","map","index","components_Blog","key","BlogForm","addBlog","toggleVisible","_useState","useState","_useState2","slicedToArray","setTitle","_useState3","_useState4","setAuthor","_useState5","_useState6","url","setUrl","event","target","App","loginVisible","setLoginVisible","_useState7","_useState8","createBlogVisible","setCreateBlogVisible","_useState9","_useState10","setBlogs","_useState11","_useState12","errorMessage","setErrorMessage","_useState13","_useState14","successMessage","setSuccessMessage","_useState15","_useState16","user","setUser","useEffect","blogsService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","toggleLoginVisible","_user2","preventDefault","loginService","setItem","stringify","setTimeout","handleSetUsername","handleSetPassword","handleAddBlog","_ref2","_callee2","newBlog","newBlogs","_context2","status","error","_x2","className","style","color","display","flexDirection","alignItems","removeItem","components_BlogForm","components_Blogs","components_LoginForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.754b0034.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  try {\n    const response = await axios.post(baseUrl, newObject, config)\n    return response;\n  } catch (exception) {\n    return exception;\n  }\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, setToken, create }","import React from 'react'\n\nconst LoginForm = props => {\n  const { username, setUsername, password, setPassword, handleLogin, handleVisible, visible } = props;\n\n  return (\n    <div>\n      {visible &&\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input\n              type=\"text\"\n              value={username}\n              name=\"Username\"\n              onChange={setUsername}\n            />\n          </div>\n          <div>\n            password\n            <input\n              type=\"password\"\n              value={password}\n              name=\"Password\"\n              onChange={setPassword}\n            />\n          </div>\n          <button type=\"submit\">login</button>\n        </form>\n      }\n      <button onClick={handleVisible}>{visible ? \"cancel\" : \"login\"}</button>\n    </div>\n  )\n}\n\nexport default LoginForm;","import React from 'react'\nconst Blog = ({ blog }) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>\n)\n\nexport default Blog","import React from 'react'\nimport Blog from './Blog'\n\nconst Blogs = ({ blogs }) => {\n  const renderBlogs = () => blogs.map((blog, index) => <Blog key={index} blog={blog} />)\n\n  return (\n    <div>\n      {renderBlogs()}\n    </div>\n  )\n}\n\nexport default Blogs","import React, { useState } from 'react';\n\nconst BlogForm = (props) => {\n  const { addBlog, visible, toggleVisible } = props;\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n\n  const handleSetTitle = event => setTitle(event.target.value)\n\n  const handleSetAuthor = event => setAuthor(event.target.value)\n\n  const handleSetUrl = event => setUrl(event.target.value)\n\n  const handleAddBlog = () => {\n    addBlog({ title, author, url })\n  }\n\n  const handleToggleVisible = () => {\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n    toggleVisible()\n  }\n\n  return (\n    <div>\n      {visible &&\n        <div>\n          <div>\n            title:\n          <input\n              type=\"text\"\n              value={title}\n              name=\"title\"\n              onChange={handleSetTitle}\n            />\n          </div>\n          <div>\n            author:\n          <input\n              type=\"text\"\n              value={author}\n              name=\"author\"\n              onChange={handleSetAuthor}\n            />\n          </div>\n          <div>\n            url:\n          <input\n              type=\"text\"\n              value={url}\n              name=\"url\"\n              onChange={handleSetUrl}\n            />\n          </div>\n          <button onClick={handleAddBlog}>create</button>\n        </div>\n      }\n      <button onClick={handleToggleVisible}>{visible ? \"cancel\" : \"create blog\"}</button>\n    </div>\n  )\n}\n\nexport default BlogForm;","import React, { useState, useEffect } from 'react';\nimport loginService from './services/login'\nimport blogsService from './services/blogs'\nimport LoginForm from './components/LoginForm'\nimport Blogs from './components/Blogs';\nimport BlogForm from './components/BlogForm';\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [loginVisible, setLoginVisible] = useState(false)\n  const [createBlogVisible, setCreateBlogVisible] = useState(false)\n  const [blogs, setBlogs] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogsService\n      .getAll()\n      .then(initialNotes => setBlogs(initialNotes))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogsService.setToken(user.token)\n    }\n  }, [])\n\n  const toggleLoginVisible = () => {\n    if (loginVisible) {\n      setUsername('')\n      setPassword('')\n      setLoginVisible(false)\n    } else {\n      setLoginVisible(true)\n    }\n  }\n\n  const handleCreateBlogVisible = () => setCreateBlogVisible(!createBlogVisible)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogsService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null);\n    window.localStorage.removeItem('loggedNoteappUser');\n  }\n\n  const handleSetUsername = event => setUsername(event.target.value)\n\n  const handleSetPassword = event => setPassword(event.target.value)\n\n  const renderLoginForm = () => {\n    return (\n      <LoginForm\n        username={username}\n        password={password}\n        setUsername={handleSetUsername}\n        setPassword={handleSetPassword}\n        handleLogin={handleLogin}\n        visible={loginVisible}\n        handleVisible={toggleLoginVisible}\n      />\n    )\n  }\n\n  const handleAddBlog = async (blog) => {\n    const newBlog = await blogsService.create(blog)\n    if (newBlog.status === 200) {\n      const author = newBlog.data.author\n      setSuccessMessage(`a new blog ${blog.title} added${!!author ? ` by ${author}.` : \".\"}`)\n      const newBlogs = await blogsService.getAll()\n      setBlogs(newBlogs)\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 5000)\n    } else {\n      setErrorMessage(`${newBlog.response.data.error}`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">Blogs</h1>\n      <div style={{ color: \"red\" }}>{errorMessage}</div>\n      <div style={{ color: \"green\" }}>{successMessage}</div>\n      {!user\n        ? renderLoginForm()\n        :\n        <div>\n          <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n            <p>{`${user.name} logged in`}</p>\n            <button onClick={handleLogout}>logout</button>\n          </div>\n          <h2>create new blog</h2>\n          <BlogForm addBlog={handleAddBlog} visible={createBlogVisible} toggleVisible={handleCreateBlogVisible}/>\n          <Blogs blogs={blogs}/>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}